// Code generated by mockery v2.51.0. DO NOT EDIT.

package sops

import mock "github.com/stretchr/testify/mock"

// SopsAPIMock is an autogenerated mock type for the SopsAPI type
type SopsAPIMock struct {
	mock.Mock
}

type SopsAPIMock_Expecter struct {
	mock *mock.Mock
}

func (_m *SopsAPIMock) EXPECT() *SopsAPIMock_Expecter {
	return &SopsAPIMock_Expecter{mock: &_m.Mock}
}

// DecryptFile provides a mock function with given fields: _a0, _a1
func (_m *SopsAPIMock) DecryptFile(_a0 []byte, _a1 string) ([]byte, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for DecryptFile")
	}

	var r0 []byte
	var r1 error
	if rf, ok := ret.Get(0).(func([]byte, string) ([]byte, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func([]byte, string) []byte); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	if rf, ok := ret.Get(1).(func([]byte, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SopsAPIMock_DecryptFile_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DecryptFile'
type SopsAPIMock_DecryptFile_Call struct {
	*mock.Call
}

// DecryptFile is a helper method to define mock.On call
//   - _a0 []byte
//   - _a1 string
func (_e *SopsAPIMock_Expecter) DecryptFile(_a0 interface{}, _a1 interface{}) *SopsAPIMock_DecryptFile_Call {
	return &SopsAPIMock_DecryptFile_Call{Call: _e.mock.On("DecryptFile", _a0, _a1)}
}

func (_c *SopsAPIMock_DecryptFile_Call) Run(run func(_a0 []byte, _a1 string)) *SopsAPIMock_DecryptFile_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]byte), args[1].(string))
	})
	return _c
}

func (_c *SopsAPIMock_DecryptFile_Call) Return(_a0 []byte, _a1 error) *SopsAPIMock_DecryptFile_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *SopsAPIMock_DecryptFile_Call) RunAndReturn(run func([]byte, string) ([]byte, error)) *SopsAPIMock_DecryptFile_Call {
	_c.Call.Return(run)
	return _c
}

// NewSopsAPIMock creates a new instance of SopsAPIMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSopsAPIMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *SopsAPIMock {
	mock := &SopsAPIMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
